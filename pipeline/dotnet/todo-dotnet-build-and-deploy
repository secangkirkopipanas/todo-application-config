apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: todo-dotnet-app
    app.kubernetes.io/name: todo-dotnet-app
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    pipeline.openshift.io/runtime: dotnet
    pipeline.openshift.io/runtime-version: 7.0-ubi8
    pipeline.openshift.io/type: kubernetes
  name: todo-dotnet-build-and-deploy
spec:
  params:
    - default: todo-dotnet-app
      name: APP_NAME
      type: string
    - default: 'https://github.com/kahlai/todo-dotnet.git'
      name: GIT_REPO
      type: string
    - default: main
      name: GIT_REVISION
      type: string
    - default: quay.io/rh_rh/todo-dotnet
      name: IMAGE_NAME
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
    - default: 7.0-ubi8
      name: VERSION
      type: string
    - default: 'https://github.com/secangkirkopipanas/todo-application-infra.git'
      description: Git repository of infra code
      name: INFRA_GIT_REPO
      type: string
    - default: main
      description: Git ref of infra code repo
      name: INFRA_GIT_REF
      type: string
    - default: latest
      description: Last Git commit ID
      name: GIT_COMMIT_ID
      type: string
    - default: deploy/app-dotnet/overlays/dev/dep-todo-dev.yaml
      description: Path to deployment manifest
      name: MANIFEST_FILE
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: build
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: GIT_COMMIT_ID
          value: $(params.GIT_COMMIT_ID)
        - name: TLSVERIFY
          value: 'false'
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: VERSION
          value: $(params.VERSION)
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: s2i-dotnet
      workspaces:
        - name: source
          workspace: workspace
    - name: acs-image-scan
      params:
        - name: rox_central_endpoint
          value: stackrox
        - name: rox_api_token
          value: stackrox
        - name: image
          value: $(params.IMAGE_NAME)
        - name: git_commit_id
          value: $(params.GIT_COMMIT_ID)
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - build
      taskRef:
        kind: Task
        name: acs-image-scan
    - name: acs-image-check
      params:
        - name: rox_central_endpoint
          value: stackrox
        - name: rox_api_token
          value: stackrox
        - name: image
          value: $(params.IMAGE_NAME)
        - name: git_commit_id
          value: $(params.GIT_COMMIT_ID)
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - acs-image-scan
      taskRef:
        kind: Task
        name: acs-image-check
    - name: update-manifest-and-push
      params:
        - name: insecure-skip-tls-verify
          value: 'true'
        - name: gitRepositoryUrl
          value: $(params.INFRA_GIT_REPO)
        - name: gitRepositoryRevision
          value: $(params.INFRA_GIT_REF)
        - name: pushToRevision
          value: $(params.INFRA_GIT_REF)
        - name: image
          value: $(params.IMAGE_NAME)
        - name: imageTagName
          value: $(params.GIT_COMMIT_ID)
        - name: kustomizationFile
          value: $(params.MANIFEST_FILE)
      runAfter:
        - acs-image-check
      taskRef:
        kind: Task
        name: update-dotnet-manifest
      workspaces:
        - name: source
          workspace: workspace
  workspaces:
    - name: workspace
